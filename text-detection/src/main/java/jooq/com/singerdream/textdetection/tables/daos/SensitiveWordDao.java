/*
 * This file is generated by jOOQ.
 */
package com.singerdream.textdetection.tables.daos;


import com.singerdream.textdetection.tables.SensitiveWord;
import com.singerdream.textdetection.tables.records.SensitiveWordRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class SensitiveWordDao extends DAOImpl<SensitiveWordRecord, com.singerdream.textdetection.tables.pojos.SensitiveWord, Long> {

    /**
     * Create a new SensitiveWordDao without any configuration
     */
    public SensitiveWordDao() {
        super(SensitiveWord.SENSITIVE_WORD, com.singerdream.textdetection.tables.pojos.SensitiveWord.class);
    }

    /**
     * Create a new SensitiveWordDao with an attached configuration
     */
    @Autowired
    public SensitiveWordDao(Configuration configuration) {
        super(SensitiveWord.SENSITIVE_WORD, com.singerdream.textdetection.tables.pojos.SensitiveWord.class, configuration);
    }

    @Override
    public Long getId(com.singerdream.textdetection.tables.pojos.SensitiveWord object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.singerdream.textdetection.tables.pojos.SensitiveWord> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(SensitiveWord.SENSITIVE_WORD.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.singerdream.textdetection.tables.pojos.SensitiveWord> fetchById(Long... values) {
        return fetch(SensitiveWord.SENSITIVE_WORD.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.singerdream.textdetection.tables.pojos.SensitiveWord fetchOneById(Long value) {
        return fetchOne(SensitiveWord.SENSITIVE_WORD.ID, value);
    }

    /**
     * Fetch records that have <code>content BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.singerdream.textdetection.tables.pojos.SensitiveWord> fetchRangeOfContent(String lowerInclusive, String upperInclusive) {
        return fetchRange(SensitiveWord.SENSITIVE_WORD.CONTENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>content IN (values)</code>
     */
    public List<com.singerdream.textdetection.tables.pojos.SensitiveWord> fetchByContent(String... values) {
        return fetch(SensitiveWord.SENSITIVE_WORD.CONTENT, values);
    }
}
